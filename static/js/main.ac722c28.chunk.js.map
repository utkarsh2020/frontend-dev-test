{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","image","date","totalCores","landedCores","className","src","alt","height","width","CardList","flights","map","flight","flight_number","links","patch","small","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","date_utc","cores","length","filter","core","landing_success","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","spaceShips","filteredFlights","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac722c28.chunk.js","sourcesContent":["//This Card class is reponsible for the representation a card that has information about a flight\nimport React from 'react';\nimport './Card.css';\n\nconst Card =({id,name,image,date,totalCores,landedCores}) =>{    \n    return (\n        <div className='bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>  \n            <h2>{id}</h2>         \n            <img src={`${image}`} alt={`${name}`} height='300' width='350'/>\n            <div>\n                <h3>{name}</h3>\n                <p>{date}</p>\n                <p>Cores Landed: {landedCores} of {totalCores}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","//The extensive list of cards (flights) as per the reponse.\n\nimport React from 'react'\nimport Card from './Card';\n\nconst CardList =({flights}) => {  \n    return(\n        <div>\n          {\n            flights.map(flight => {\n                return (\n                    <Card id= {flight.flight_number}\n                          name= {flight.name} \n                          image={flight.links.patch.small} \n                          date={new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(new Date(flight.date_utc))} \n                          totalCores={flight.cores.length}\n                          landedCores={flight.cores.filter(core => core.landing_success).length}\n                    />\n                );\n            })\n          }\n        </div>\n    );\n}\n\nexport default CardList;","//The search box\nimport React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n    return(\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--dark-blue bg-lighest-blue'\n                type='search'\n                placeholder='Search Flights by Name'\n                onChange = {searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","//This class helps in adding an individual scroll for the cards that keeps search bar at its place while scrolling\nimport React from 'react'\n\nconst Scroll =(props) => {\n    return (\n        <div style={{overflowY:'scroll',border:'1px solid black', height:'800px' }}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","//If error occurs this will display a simplified error message to user (only in production)\nimport React, {Component} from 'react';\n\nclass ErrorBoundary extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            hasError: false\n        }\n    }   \n\n    conponentDidCatch(error,info){\n        this.setState({hasError : true});\n    }\n\n    render(){\n        if (this.state.hasError){\n            return <h1 className='tc'>Oops... Looks like some error has occured</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React,{Component} from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nimport './App.css';\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            flights: [],\n            searchField: ''\n        }\n    }\n    //Fetch the Space X past mission using the provided Api\n    componentDidMount(){\n        fetch('https://api.spacexdata.com/v4/launches/past')\n        .then(response => response.json())\n        .then(spaceShips => [this.setState({flights:spaceShips})]);\n        \n    }\n\n    //On chaning the serach field set it to filter the names\n    onSearchChange = (event) => {\n        this.setState({searchField: event.target.value});        \n    }\n\n    //Render te page\n    render(){\n        const {flights, searchField} = this.state;\n        const filteredFlights = flights.filter(flight => {\n            return flight.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        if (flights.length === 0){\n            return <h1 className='tc'>Loading...</h1>\n        }\n        else{\n            return(\n                <div className='tc'>\n                    <h1 className ='f1'>Space-X</h1>                    \n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList flights={filteredFlights}/>\n                        </ErrorBoundary>                        \n                    </Scroll>                   \n                </div>\n            );\n        }\n        \n    }\n    \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}